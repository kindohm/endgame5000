do
  let pat = "{1@3 1@5 1@5 1@8 1@5 1@8 0@6 1@4}%16"
  d1 
    $ someCyclesBy 0 rev $ (1 ~>)
    $ someCyclesBy 0 (iter "<8 16>") $ (1 ~>)
    $ plyWith "{2@3 2@5 1@5 1@8 1@5 1@8 1@6 1@4}%16" (# amp 0.5)
    $ stack [
      -- main synth
      struct pat $ s "synth1" # midichan 0 # amp 1 # note "c5"
      , struct (inv pat) $ s "synth1" # midichan 0 # amp 0.1 # note "c5"
      -- period synth
      , struct (inv pat) $ s "synth2" # midichan 0 # amp 1 # note "c5"
      , struct pat $ s "synth2" # midichan 0 # amp 0.1 # note "c5"
      -- kick
      , struct pat $ s "drums" # midichan 0 # amp 1 # note "c5"
      -- clap
      , struct (inv pat) $ s "drums" # midichan 3 # amp 1 # note "c5"
    ] # cps 0.666

    hush


do
  let pat = "{1@4 1@2 1@5 1@4 0@6 1@1 1@10}%16"
  let plyPat = "{2@4 2@2 4@5 3@4 2@2 8@10}%16"
  d1
    $ someCyclesBy 0.5 rev
    $ (1 ~>)
    $ someCyclesBy 0.5 (iter 8) 
    $ stack [
      plyWith plyPat (# amp 0.5) $ struct pat $ s "drums" # midichan 0 # amp 1 # note "c5" 
      , plyWith plyPat (# amp 0.5) $ struct (inv pat) $ s "drums" # midichan 3 # amp 1 # note "c5" 
      , plyWith plyPat (# amp 0.7) $ struct pat $ s "synth1" # midichan 0 # amp 1 # note "c5"
      , plyWith plyPat (# amp 0.1) $ struct (inv pat) $ s "synth1" # midichan 0 # amp 0.1 # note "c5"
      , plyWith plyPat (# amp 0.1) $ struct pat $ s "synth2" # midichan 0 # amp 0.1 # note "c5"
      , plyWith plyPat (# amp 0.7) $ struct (inv pat) $ s "synth2" # midichan 0 # amp 1 # note "c5"
    ] # cps 0.33

hush
